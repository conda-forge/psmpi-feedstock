{% set version = "5.10.0" %}
{% set pscom_version = "5.8.0" %}
{% set build = 2 %}

package:
  name: psmpi
  version: {{ version }}

source:
  - url: https://github.com/ParaStation/psmpi/archive/refs/tags/{{ version }}-1.tar.gz
    sha256: c05a0281934dc54dc1178df997481a9be4b5b3cc7d5aa515f55d9f7df3f491dc
    folder: psmpi
  - url: https://github.com/ParaStation/pscom/archive/refs/tags/{{ pscom_version }}-1.tar.gz
    sha256: e07759bf6efb99c15e9e2a77f32a27af71e0e0438813eaa589ab03d3d0683eca
    folder: pscom

build:
  number: {{ build }}
  run_exports:
    - {{ pin_subpackage('psmpi', max_pin='x.y') }}
  skip: true  # [win or osx]

requirements:
  build:
    - gcc_linux-64 >=10.3.0
    - gxx_linux-64 >=10.3.0
    - gfortran_linux-64 >=10.3.0
    - {{ stdlib("c") }}
    - autoconf
    - automake
    - cmake
    - libtool
    - make
  host:
    - libhwloc
    - libpmix-devel 
    - ucx
  run:
    - gcc_linux-64 >=10.3.0
    - gxx_linux-64 >=10.3.0
    - gfortran_linux-64 >=10.3.0
    - libhwloc
    - libpmix
    - mpi 1.0.* psmpi
    - ucx

test:
  files:
    - hello_world_mpi.f90
  commands:
    - mpichversion
    - mpifort -o hello_world_mpi hello_world_mpi.f90
    - ./hello_world_mpi

about:
  home: https://github.com/ParaStation/psmpi
  license: QPL-1.0
  license_family: OTHER
  license_file: LICENSE
  summary: ParaStation MPI is an MPIch based implementation of the Message-Passing Interface (MPI) Standard.
  description: |
    ParaStation MPI relies on a low-level communication layer called `pscom` and provides full MPI-4 compliance. 
    
    Since it is configured with the Process Management Interface for Exascale (PMIx), an external job launcher is 
    required to run MPI jobs. Typically, in high-performance computing environments using the Slurm Workload Manager,
    applications would be executed with:

    ```
    srun --mpi=pmix mpi_application
    ```

extra:
  recipe-maintainers:
    - j34ni
